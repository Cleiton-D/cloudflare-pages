name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    env:
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies
      run: yarn install

    - name: Build
      run: npm run build

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v2

    - name: Init terraform
      run: terraform init

    - name: Import existent
      continue-on-error: true
      run: terraform import cloudflare_pages_project.basic_project a134f5c96e90e0c3fec81a95dc00725e/terraform-teste

    - name: terraform apply
      run: terraform apply -auto-approve

    - name: Publish to Cloudflare Pages
      uses: cloudflare/pages-action@1
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: a134f5c96e90e0c3fec81a95dc00725e
        projectName: terraform-teste
        directory: dist
        gitHubToken: ${{ secrets.GITHUB_TOKEN }}